schema {
  query: RootQueryType
  mutation: RootMutationType
}

type Account {
  """erc20 udts"""
  account_current_bridged_udts(input: AccountChildUdtsInput = {page: 1, page_size: 20, sort_type: DESC}): [AccountCurrentBridgedUdt]

  """erc20 udts"""
  account_current_udts(input: AccountChildUdtsInput = {page: 1, page_size: 20, sort_type: DESC}): [AccountCurrentUdt]
  bridged_udt: Udt
  contract_code: String
  eth_address: HashFull
  id: Int
  nonce: Int
  registry_address: String
  script: Json
  script_hash: HashAddress
  smart_contract: SmartContract
  token_transfer_count: Int
  transaction_count: Int
  type: AccountType
  udt: Udt
}

input AccountBridgedUdtsByScriptHashInput {
  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20

  """
  argument: the sort of type by custom condition
  
  default: desc
  """
  sort_type: SortType = DESC
  udt_script_hash: HashFull!
}

input AccountChildUdtsInput {
  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20

  """
  argument: the sort of type by custom condition
  
  default: desc
  """
  sort_type: SortType = DESC
}

input AccountCkbsInput {
  address_hashes: [HashAddress] = []
  script_hashes: [HashFull] = []
}

type AccountCurrentBridgedUdt {
  account: Account
  address_hash: HashAddress
  block_number: Int
  id: Int
  inserted_at: DateTime
  layer1_block_number: Int
  udt: Udt
  udt_script_hash: HashFull
  updated_at: DateTime
  value: Bigint
  value_fetched_at: DateTime
}

input AccountCurrentBridgedUdtsInput {
  """
  argument: the list of account eth address
  example: ["0x15ca4f2165ff0e798d9c7434010eaacc4d768d85"]
  """
  address_hashes: [HashAddress] = []

  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20

  """
  argument: the list of account script hash
  example: ["0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e"]
  """
  script_hashes: [HashAddress] = []
  udt_script_hash: HashFull
}

type AccountCurrentUdt {
  account: Account
  address_hash: HashAddress
  block_number: Int
  id: Int
  inserted_at: DateTime
  token_contract_address_hash: HashAddress
  udt: Udt
  updated_at: DateTime
  value: Bigint
  value_fetched_at: DateTime
}

input AccountCurrentUdtsInput {
  """
  argument: the list of account eth address
  example: ["0x15ca4f2165ff0e798d9c7434010eaacc4d768d85"]
  """
  address_hashes: [HashAddress] = []

  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20

  """
  argument: the list of account script hash
  example: ["0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e"]
  """
  script_hashes: [HashFull] = []

  """
  argument: the address of smart contract which supply udts
  example: "0xbf1f27daea43849b67f839fd101569daaa321e2c"
  """
  token_contract_address_hash: HashAddress
}

input AccountInput {
  """
  address: account address(eth_address)
  example: "0x59b670e9fa9d0a427751af201d676719a970857b"
  
  script_hash: script hash with hash_full type
  example: "0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e"
  """
  address: HashAddress
  script_hash: HashFull
}

enum AccountType {
  ETH_ADDR_REG
  ETH_USER
  META_CONTRACT
  POLYJUICE_CONTRACT
  POLYJUICE_CREATOR
  UDT
}

type AccountUdt {
  account: Account
  address_hash: HashAddress
  token_contract_address_hash: HashAddress
  udt: Udt
  udt_script_hash: HashFull
  uniq_id: Int
  value: Bigint
}

input AccountUdtsByContractAddressInput {
  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20

  """
  argument: the sort of type by custom condition
  
  default: desc
  """
  sort_type: SortType = DESC
  token_contract_address_hash: HashAddress!
}

input AccountUdtsInput {
  address_hashes: [HashAddress] = []
  script_hashes: [HashFull] = []
  token_contract_address_hash: HashAddress
  udt_script_hash: HashFull
}

enum ApprovalType {
  APPROVAL
  APPROVAL_ALL
}

"""
The `bigint` scalar type represents signed big integer
values parsed by the elixir `Decimal` library(which support big integer scenario).  The BigInt appears in a JSON
response as a string to preserve Big Interger.

Formally:
sign           ::=  '+' | '-'
digit          ::=  '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' |
                    '8' | '9'
digits         ::=  digit [digit]...
numeric-string ::=  [sign] digits| [sign] digit

Examples:

Some numeric strings are:

    "0"          -- zero
    "12"         -- a whole number
    "-76"        -- a signed whole number
"""
scalar Bigint

type Block {
  account: Account
  difficulty: Decimal
  extra_data: String
  gas_limit: Decimal
  gas_used: Decimal
  hash: HashFull
  layer1_block_number: Int
  layer1_tx_hash: HashFull
  logs_bloom: String
  nonce: String
  number: Int
  parent_hash: HashFull
  producer_address: HashAddress
  registry_id: Int
  sha3_uncles: String
  size: Int
  state_root: String
  status: BlockStatus
  timestamp: DateTime
  total_difficulty: Decimal
  transaction_count: Int
  transactions(input: PageAndSizeInput = {page: 1, page_size: 5}): [Transaction]
}

input BlockInput {
  hash: HashFull
  number: Int
}

input BlocksInput {
  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20

  """
  argument: the sort of type by custom condition
  
  default: desc
  """
  sort_type: SortType = DESC
}

enum BlockStatus {
  COMMITTED
  FINALIZED
}

"""
chain data is an unpadded hexadecimal number with 0 or more digits.  Each pair of digits maps directly
to a byte in the underlying binary representation.  When interpreted as a number, it should be treated as big-endian.
"""
scalar ChainData

"""
The `DateTime` scalar type represents a date and time in the UTC
timezone. The DateTime appears in a JSON response as an ISO8601 formatted
string, including UTC timezone ("Z"). The parsed date and time string will
be converted to UTC if there is an offset.
"""
scalar DateTime

"""
The `Decimal` scalar type represents signed double-precision fractional
values parsed by the `Decimal` library.  The Decimal appears in a JSON
response as a string to preserve precision.

Formally:
sign           ::=  '+' | '-'
digit          ::=  '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' |
                    '8' | '9'
indicator      ::=  'e' | 'E'
digits         ::=  digit [digit]...
decimal-part   ::=  digits '.' [digits] | ['.'] digits
exponent-part  ::=  indicator [sign] digits
infinity       ::=  'Infinity' | 'Inf'
nan            ::=  'NaN' [digits] | 'sNaN' [digits]
numeric-value  ::=  decimal-part [exponent-part] | infinity
numeric-string ::=  [sign] numeric-value | [sign] nan

Examples:

Some numeric strings are:

    "0"          -- zero
    "12"         -- a whole number
    "-76"        -- a signed whole number
    "12.70"      -- some decimal places
    "+0.003"     -- a plus sign is allowed, too
    "017."       -- the same as 17
    ".5"         -- the same as 0.5
    "4E+9"       -- exponential notation
    "0.73e-7"    -- exponential notation, negative power
    "Inf"        -- the same as Infinity
    "-infinity"  -- the same as -Inf
    "NaN"        -- not-a-Number
    "NaN8275"    -- diagnostic NaN
"""
scalar Decimal

input Erc1155HoldersInput {
  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String
  contract_address: HashAddress!

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  token_id: Decimal
}

type Erc1155Udt {
  account: Account
  contract_address_hash: HashAddress
  description: String
  eth_type: EthType
  holders_count: Int
  icon: String
  id: Int
  minted_count: Int
  name: String
  official_site: String
  symbol: String
  token_type_count: Int
}

type Erc1155UserToken {
  address_hash: HashAddress
  token_contract_address_hash: HashAddress
  token_id: Decimal
  token_type: EthType
  udt: Erc1155Udt
  value: Decimal
}

input Erc1155UserTokenInput {
  contract_address: HashAddress!
  token_id: Decimal!
  user_address: HashAddress!
}

input Erc20TokenTransfersInput {
  """Fetch the records after this cursor."""
  after: String
  age_range_end: DateTime
  age_range_start: DateTime

  """Fetch the records before this cursor."""
  before: String

  """
  if combine_from_to is true, then from_address and to_address are combined into
  query condition like `address = from_address OR address = to_address`
  """
  combine_from_to: Boolean = true

  """argument: the end of block number(inclusive) for search query"""
  end_block_number: Int
  from_address: HashAddress

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  sorter: [TokenTransfersSorterInput] = [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: LOG_INDEX}, {sort_type: ASC, sort_value: TRANSACTION_HASH}]

  """argument: the start of block number(inclusive) for search query"""
  start_block_number: Int
  to_address: HashAddress
  token_contract_address_hash: HashAddress
  transaction_hash: HashFull
}

type Erc721Erc1155HolderItem {
  account: Account
  address_hash: HashAddress
  quantity: Decimal
  rank: Int
  token_contract_address_hash: HashAddress
}

input Erc721Erc1155InventoryInput {
  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String
  contract_address: HashAddress!

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  token_id: Decimal
}

input Erc721Erc1155TokenTransfersInput {
  """Fetch the records after this cursor."""
  after: String
  age_range_end: DateTime
  age_range_start: DateTime

  """Fetch the records before this cursor."""
  before: String

  """
  if combine_from_to is true, then from_address and to_address are combined into
  query condition like `address = from_address OR address = to_address`
  """
  combine_from_to: Boolean = true

  """argument: the end of block number(inclusive) for search query"""
  end_block_number: Int
  from_address: HashAddress

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  sorter: [TokenTransfersSorterInput] = [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: LOG_INDEX}, {sort_type: ASC, sort_value: TRANSACTION_HASH}]

  """argument: the start of block number(inclusive) for search query"""
  start_block_number: Int
  to_address: HashAddress
  token_contract_address_hash: HashAddress
  token_id: Decimal
  transaction_hash: HashFull
}

input Erc721Erc1155UdtsInput {
  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String
  contract_address: HashAddress
  fuzzy_name: String

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  sorter: [UdtsSorterInput] = [{sort_type: ASC, sort_value: ID}]
}

input Erc721HoldersInput {
  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String
  contract_address: HashAddress!

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
}

type Erc721Udt {
  account: Account
  contract_address_hash: HashAddress
  description: String
  eth_type: EthType
  holders_count: Int
  icon: String
  id: Int
  minted_count: Int
  name: String
  official_site: String
  symbol: String
}

type Erc721UserToken {
  address_hash: HashAddress
  token_contract_address_hash: HashAddress
  token_id: Decimal
  token_type: EthType
  udt: Erc721Udt
  value: Decimal
}

enum EthType {
  ERC1155
  ERC20
  ERC721
}

"""
The address (40 (hex) characters / 160 bits / 20 bytes) is derived from the public key (128 (hex) characters /
512 bits / 64 bytes) which is derived from the private key (64 (hex) characters / 256 bits / 32 bytes).

The address is actually the last 40 characters of the keccak-256 hash of the public key with `0x` appended.
"""
scalar HashAddress

"""A 32-byte [KECCAK-256](https://en.wikipedia.org/wiki/SHA-3) hash."""
scalar HashFull

"""
The `Json` scalar type represents arbitrary json string data, represented as UTF-8
character sequences. The Json type is most often used to represent a free-form
human-readable json string.
"""
scalar Json

type Log {
  address_hash: HashAddress
  block_hash: HashFull
  block_number: Int
  data: String
  first_topic: String
  fourth_topic: String
  index: Int
  second_topic: String
  third_topic: String
  transaction_hash: HashFull
}

input LogInput {
  address_hash: HashAddress

  """argument: the end of block number(inclusive) for search query"""
  end_block_number: Int
  first_topic: String
  fourth_topic: String

  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20
  second_topic: String

  """
  argument: the sort of type by custom condition
  
  default: desc
  """
  sort_type: SortType = DESC

  """argument: the start of block number(inclusive) for search query"""
  start_block_number: Int
  third_topic: String
  transaction_hash: HashFull
}

input PageAndSizeInput {
  """
  argument: the page of query result, the relations of postgres offset: offset = (page - 1) * page_size
  
  default: 1
  limit: > 0
  """
  page: Int = 1

  """
  argument: the page_size of query result, it's the same of postgres limit
  
  default: 20
  limit: > 0
  """
  page_size: Int = 20
}

type PaginateErc1155Inventory {
  entries: [Erc1155UserToken]
  metadata: PaginateMetadata
}

type PaginateErc1155Udts {
  entries: [Erc1155Udt]
  metadata: PaginateMetadata
}

type PaginateErc721Erc1155Holders {
  entries: [Erc721Erc1155HolderItem]
  metadata: PaginateMetadata
}

type PaginateErc721Inventory {
  entries: [Erc721UserToken]
  metadata: PaginateMetadata
}

type PaginateErc721Udts {
  entries: [Erc721Udt]
  metadata: PaginateMetadata
}

type PaginateMetadata {
  after: String
  before: String
  limit: Int
  total_count: Int
  total_count_cap_exceeded: Boolean
}

type PaginateSmartContracts {
  entries: [SmartContract]
  metadata: PaginateMetadata
}

type PaginateTokenApprovals {
  entries: [TokenApproval]
  metadata: PaginateMetadata
}

type PaginateTokenTransfers {
  entries: [TokenTransfer]
  metadata: PaginateMetadata
}

type PaginateTrasactions {
  entries: [Transaction]
  metadata: PaginateMetadata
}

type PaginateUdts {
  entries: [Udt]
  metadata: PaginateMetadata
}

type PaginateUserErc1155Assets {
  entries: [Erc1155UserToken]
  metadata: PaginateMetadata
}

type PaginateUserErc721Assets {
  entries: [Erc721UserToken]
  metadata: PaginateMetadata
}

type Polyjuice {
  created_contract_address_hash: HashAddress
  gas_limit: Bigint
  gas_price: Bigint
  gas_used: Bigint
  id: Int
  input: ChainData
  input_size: Int
  is_create: Boolean
  native_transfer_address_hash: HashAddress
  status: PolyjuiceStatus
  transaction_index: Int
  tx_hash: HashFull
  value: Bigint
}

type PolyjuiceCreator {
  code_hash: String
  created_account: Account
  fee_amount: Bigint
  fee_udt_id: Int
  hash_type: String
  id: Int
  script_args: String
  tx_hash: HashFull
}

enum PolyjuiceStatus {
  FAILED
  SUCCEED
}

type RootMutationType {
  """
  example:
  mutation {
    verify_and_update_from_sourcify(
      input: { address: "0x7A4a65Db21864384d2D21a60367d7Fd5c86F8Fba" }
    ) {
      id
      account_id
      # contract_source_code
      # abi
  compiler_version
      deployment_tx_hash
  name
    }
  }
  
  {
    "data": {
      "verify_and_update_from_sourcify": {
        "account_id": "43012",
        "compiler_version": "v0.8.9+commit.e5eed63a",
        "deployment_tx_hash": "0x505e25885828c847102af40848ba9cdaf7974d2046e7949ed46e2024494f33cd",
        "id": 4,
        "name": "Bridge"
      }
    }
  }
  """
  verify_and_update_from_sourcify(input: VerifyAndUpdateFromSourcifyInput!): SmartContract
}

type RootQueryType {
  """
  function: get account by account addresses
  
  request-example:
  query {
    account(input: {address: "0x59b670e9fa9d0a427751af201d676719a970857b"}){
      type
      eth_address
    }
  }
  
  result-example:
  {
    "data": {
      "account": {
        "eth_address": "0x59b670e9fa9d0a427751af201d676719a970857b",
        "type": "POLYJUICE_CONTRACT"
      }
    }
  }
  
  request-example:
  query {
    account(input: {script_hash: "0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e"}){
      type
      eth_address
      script_hash
    }
  }
  
  {
    "data": {
      "account": {
        "eth_address": null,
        "script_hash": "0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e",
        "type": "ETH_ADDR_REG"
      }
    }
  }
  
  request-example:
  query {
    account(
      input: {
        script_hash: "0x946d08cc356c4fe13bc49929f1f709611fe0a2aaa336efb579dad4ca197d1551"
      }
    ) {
      type
      eth_address
      script_hash
      script
    }
  }
  
  
  {
    "data": {
      "account": {
        "eth_address": null,
        "script": {
          "account_merkle_state": {
            "account_count": 33776,
            "account_merkle_root": "0x2a3fc6ea37bf17b717630f1f8f02a18ef9e96edf7461d6f8df5d4e115f6eb9dd"
          },
          "args": "0x702359ea7f073558921eb50d8c1c77e92f760c8f8656bde4995f26b8963e2dd8",
          "block_merkle_state": {
            "block_count": 103767,
            "block_merkle_root": "0xb6b6d9befa9012b750b666df8522e8d164b222924028a4b91d0ba4eb2f1578cb"
          },
          "code_hash": "0x37b25df86ca495856af98dff506e49f2380d673b0874e13d29f7197712d735e8",
          "hash_type": "type",
          "last_finalized_block_number": 103666,
          "reverted_block_root": "0000000000000000000000000000000000000000000000000000000000000000",
          "status": "running"
        },
        "script_hash": "0x946d08cc356c4fe13bc49929f1f709611fe0a2aaa336efb579dad4ca197d1551",
        "type": "META_CONTRACT"
      }
    }
  }
  
  request-example:
  query {
    account(
      input: {
        script_hash: "0x64050af0d25c38ddf9455b8108654f7c5cc30fe6d871a303d83b1020edddd7a7"
      }
    ) {
      type
      script_hash
      script
      udt {
        id
        name
        decimal
      }
    }
  }
  
  {
    "data": {
      "account": {
        "script": {
          "args": "0x702359ea7f073558921eb50d8c1c77e92f760c8f8656bde4995f26b8963e2dd8dac0c53c572f451e56c092fdb520aec82f5f4bf8a5c02e1c4843f40c15f84c55",
          "code_hash": "0xb6176a6170ea33f8468d61f934c45c57d29cdc775bcd3ecaaec183f04b9f33d9",
          "hash_type": "type"
        },
        "script_hash": "0x64050af0d25c38ddf9455b8108654f7c5cc30fe6d871a303d83b1020edddd7a7",
        "type": "UDT",
        "udt": {
          "decimal": 18,
          "id": "80",
          "name": "USD Coin"
        }
      }
    }
  }
  
  request-example:
  query {
    account(
      input: {
        script_hash: "0x829cc5785a4d8ac642ede32cb3cb5cb9dc389d5892f2fc2afc760691445be194"
      }
    ) {
      type
      eth_address
      script_hash
      script
    }
  }
  
  {
    "data": {
      "account": {
        "eth_address": "0x2f760c8f8656bde4995f26b8963e2dd801000000",
        "script": {
          "args": "0x702359ea7f073558921eb50d8c1c77e92f760c8f8656bde4995f26b8963e2dd801000000",
          "code_hash": "0x1629b04b49ded9e5747481f985b11cba6cdd4ffc167971a585e96729455ca736",
          "hash_type": "type"
        },
        "script_hash": "0x829cc5785a4d8ac642ede32cb3cb5cb9dc389d5892f2fc2afc760691445be194",
        "type": "POLYJUICE_CREATOR"
      }
    }
  }
  
  request-example:
  query {
    account(
      input: {
        script_hash: "0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e"
      }
    ) {
      type
      eth_address
      script_hash
      script
    }
  }
  
  {
    "data": {
      "account": {
        "eth_address": null,
        "script": {
          "args": "0x702359ea7f073558921eb50d8c1c77e92f760c8f8656bde4995f26b8963e2dd8",
          "code_hash": "0xa30dcbb83ebe571f49122d8d1ce4537679ebf511261c8ffaaa6679bf9fdea3a4",
          "hash_type": "type"
        },
        "script_hash": "0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e",
        "type": "ETH_ADDR_REG"
      }
    }
  }
  
  request-example:
  query {
    account(
      input: {
        script_hash: "0x495D9CFB7B6FAEAEB0F5A7ED81A830A477F7AEEA8D53EF73ABDC2EC2F5FED07C"
      }
    ) {
      type
      eth_address
      script
      script_hash
      smart_contract {
        id
        account_id
        name
      }
      account_current_udts {
        id
        value
      }
      account_current_bridged_udts{
        id
        value
      }
    }
  }
  
  
  {
    "data": {
      "account": {
        "account_current_bridged_udts": [
          {
            "id": 1,
            "value": "1165507481400061309833"
          }
        ],
        "account_current_udts": [],
        "eth_address": "0x715ab282b873b79a7be8b0e8c13c4e8966a52040",
        "script": {
          "args": "0x702359ea7f073558921eb50d8c1c77e92f760c8f8656bde4995f26b8963e2dd8715ab282b873b79a7be8b0e8c13c4e8966a52040",
          "code_hash": "0x07521d0aa8e66ef441ebc31204d86bb23fc83e9edc58c19dbb1b0ebe64336ec0",
          "hash_type": "type"
        },
        "script_hash": "0x495d9cfb7b6faeaeb0f5a7ed81a830a477f7aeea8d53ef73abdc2ec2f5fed07c",
        "smart_contract": null,
        "type": "ETH_USER"
      }
    }
  }
  
  bridge-account-udt-example:
  query {
    account(
      input: {
        script_hash: "0x3E1301E759261B676CE68D0D97936CD431A4AF2A34072AA94E44655909765EB4"
      }
    ) {
      udt {
        id
        name
        bridge_account_id
        type
      }
      bridged_udt {
        id
        name
        bridge_account_id
        type
      }
    }
  }
  
  {
    "data": {
      "account": {
        "bridged_udt": {
          "bridge_account_id": 36050,
          "id": "6571",
          "name": "GodwokenToken on testnet_v1",
          "type": "BRIDGE"
        },
        "udt": {
          "bridge_account_id": null,
          "id": "36050",
          "name": "GodwokenToken on testnet_v1",
          "type": "NATIVE"
        }
      }
    }
  }
  """
  account(input: AccountInput!): Account

  """
  request-result-example:
  query {
    account_bridged_udts_by_script_hash(
      input: {
        udt_script_hash: "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
        sort_type: ASC
        page_size: 1
      }
    ) {
      block_number
      id
      udt_script_hash
      value
      value_fetched_at
      udt {
        id
        name
        bridge_account_id
        script_hash
        decimal
        value
      }
      account {
        id
        eth_address
        script_hash
      }
    }
  }
  
  {
    "data": {
      "account_bridged_udts_by_script_hash": [
        {
          "account": {
            "eth_address": null,
            "id": 1,
            "script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
          },
          "block_number": 6135,
          "id": 49,
          "udt": {
            "bridge_account_id": null,
            "decimal": null,
            "id": "1",
            "name": null,
            "script_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "value": null
          },
          "udt_script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca",
          "value": "0",
          "value_fetched_at": null
        }
      ]
    }
  }
  """
  account_bridged_udts_by_script_hash(input: AccountBridgedUdtsByScriptHashInput!): [AccountCurrentBridgedUdt]

  """
  request-result-example:
  query {
    account_ckbs(
      input: { address_hashes: ["0x715AB282B873B79A7BE8B0E8C13C4E8966A52040"] }
    ) {
      udt_script_hash
      value
      udt {
        id
        name
        bridge_account_id
        script_hash
        decimal
        value
      }
      account {
        id
        eth_address
        script_hash
      }
    }
  }
  
  {
    "data": {
      "account_ckbs": [
        {
          "account": {
            "eth_address": null,
            "id": 1,
            "script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
          },
          "udt": {
            "bridge_account_id": 375,
            "decimal": 18,
            "id": "1",
            "name": "pCKB",
            "script_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "value": null
          },
          "udt_script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca",
          "value": "1165507481400061309833"
        }
      ]
    }
  }
  """
  account_ckbs(input: AccountCkbsInput!): [AccountUdt]

  """
  request-result-example:
  query {
    account_current_bridged_udts(
      input: {
        address_hashes: ["0x715AB282B873B79A7BE8B0E8C13C4E8966A52040"]
        udt_script_hash: "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
      }
    ) {
      block_number
      id
      udt_script_hash
      value
      value_fetched_at
      udt {
        id
        name
        bridge_account_id
        script_hash
        decimal
        value
      }
      account {
        id
        eth_address
        script_hash
      }
    }
  }
  
  {
    "data": {
      "account_current_bridged_udts": [
        {
          "account": {
            "eth_address": null,
            "id": 1,
            "script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
          },
          "block_number": null,
          "id": 1,
          "udt": {
            "bridge_account_id": null,
            "decimal": null,
            "id": "1",
            "name": null,
            "script_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "value": null
          },
          "udt_script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca",
          "value": "1165507481400061309833",
          "value_fetched_at": null
        }
      ]
    }
  }
  """
  account_current_bridged_udts(input: AccountCurrentBridgedUdtsInput!): [AccountCurrentBridgedUdt]

  """
  erc20 udts
  request-result-example:
  query {
    account_current_udts(
      input: {
        address_hashes: ["0xC6A44E4D2216A98B3A5086A64A33D94FBCC8FEC3"]
        token_contract_address_hash: "0xbb30e8691f6ffd5b4c0b2f73d17847e1e289ea80"
      }
    ) {
      block_number
      id
      token_contract_address_hash
      value
      value_fetched_at
      udt {
        id
        name
        bridge_account_id
        script_hash
        decimal
        value
      }
      account {
        id
        eth_address
        script_hash
      }
    }
  }
  
  
  {
    "data": {
      "account_current_udts": []
    }
  }
  """
  account_current_udts(input: AccountCurrentUdtsInput!): [AccountCurrentUdt]

  """
  erc20 udts
  request-result-example:
  query {
    account_udts(
      input: {
        address_hashes: ["0x715AB282B873B79A7BE8B0E8C13C4E8966A52040"],
  
        udt_script_hash: "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
      }
    ) {
      udt_script_hash
      value
      udt {
        id
        name
        bridge_account_id
        script_hash
        decimal
        value
      }
      account {
        id
        eth_address
        script_hash
      }
    }
  }
  
  {
    "data": {
      "account_udts": [
        {
          "account": {
            "eth_address": null,
            "id": 1,
            "script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
          },
          "udt": {
            "bridge_account_id": 375,
            "decimal": 18,
            "id": "1",
            "name": "pCKB",
            "script_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "value": null
          },
          "udt_script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca",
          "value": "1165507481400061309833"
        }
      ]
    }
  }
  """
  account_udts(input: AccountUdtsInput!): [AccountUdt]

  """
  erc20 udts
  request-result-example:
  query {
    account_udts_by_contract_address(
      input: {
        token_contract_address_hash: "0xD1556D3FE220B6EB816536AB448DE4E4EDC3E439"
        sort_type: ASC
        page_size: 1
      }
    ) {
      block_number
      id
      token_contract_address_hash
      value
      value_fetched_at
      udt {
        id
        name
        bridge_account_id
        script_hash
        decimal
        value
      }
      account {
        id
        eth_address
        script_hash
      }
    }
  }
  
  {
    "data": {
      "account_udts_by_contract_address": [
        {
          "account": {
            "eth_address": "0xd1556d3fe220b6eb816536ab448de4e4edc3e439",
            "id": 70,
            "script_hash": "0x66fb5a40e0bb9c62a68770b77393e2c5cc8428503025d9478550e99d0bed5138"
          },
          "block_number": 2857,
          "id": 5,
          "token_contract_address_hash": "0xd1556d3fe220b6eb816536ab448de4e4edc3e439",
          "udt": null,
          "value": "4",
          "value_fetched_at": "2022-06-01T06:03:53.730509Z"
        }
      ]
    }
  }
  """
  account_udts_by_contract_address(input: AccountUdtsByContractAddressInput!): [AccountCurrentUdt]

  """
  function: get block by block number or block hash
  
  request-result-example:
  query {
    block(input: {number: 1}){
      hash
      parent_hash
      number
      gas_used
      gas_limit
      account{
        id
        eth_address
      }
      transactions (input: {page: 1, page_size: 2}) {
        type
        from_account_id
        to_account_id
      }
    }
  }
  
  {
    "data": {
      "block": {
        "account": null,
        "gas_limit": "12500000",
        "gas_used": "0",
        "hash": "0x4ac339b063e52dac1b845d935788f379ebcdb0e33ecce077519f39929dbc8829",
        "number": 1,
        "parent_hash": "0x61bcff6f20e8be09bbe8e36092a9cc05dd3fa67e3841e206e8c30ae0dd7032df",
        "transactions": []
      }
    }
  }
  """
  block(input: BlockInput): Block

  """
  function: get list of block sort by block number
  
  request-example:
  query {
    blocks(input: {}){
      hash
      parent_hash
      number
      gas_used
      gas_limit
      producer_address
      account{
        eth_address
      }
      transactions (input: {page: 1, page_size: 2}) {
        type
        from_account_id
        to_account_id
      }
    }
  }
  
  result-example:
  {
    "data": {
      "block": {
        "account": null,
        "gas_limit": "12500000",
        "gas_used": "0",
        "hash": "0x089f36f4f1eb1060e12ade101e4a6326423fa6cd11915d9bf1ef4bacafdbe663",
        "number": 14938,
        "parent_hash": "0xa552df86bad0233d0acb183056b095ac50abfa93161ff6b62ebe52bac2e53776",
        "producer_address": "715ab282b873b79a7be8b0e8c13c4e8966a52040",
        "transactions": []
      }
    }
  }
  """
  blocks(input: BlocksInput = {page: 1, page_size: 10, sort_type: DESC}): [Block]

  """
  query {
    erc1155_holders(
      input: {
        contract_address: "0xe6903e124e5bdae8784674eb625f1c212efc789e"
        limit: 1
      }
    ) {
      entries {
        rank
        address_hash
        token_contract_address_hash
        quantity
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc1155_holders": {
        "entries": [
          {
            "address_hash": "0x46b6f87debd8f7607d00df47c31d2dc6d9999999",
            "quantity": "21002",
            "rank": 1,
            "token_contract_address_hash": "0xe6903e124e5bdae8784674eb625f1c212efc789e"
          }
        ],
        "metadata": {
          "after": "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABRGtvh969j3YH0A30fDHS3G2ZmZmWgCZAAHaG9sZGVyc2QACHF1YW50aXR5dAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmYgAAUgpkAANleHBhAGQABHNpZ25hAQ==",
          "before": null,
          "total_count": 5
        }
      }
    }
  }
  
  query {
    erc1155_holders(
      input: {
        contract_address: "0xe6903e124e5bdae8784674eb625f1c212efc789e"
        limit: 1
        after: "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABRGtvh969j3YH0A30fDHS3G2ZmZmWgCZAAHaG9sZGVyc2QACHF1YW50aXR5dAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmYgAAUgpkAANleHBhAGQABHNpZ25hAQ=="
      }
    ) {
      entries {
        rank
        address_hash
        token_contract_address_hash
        quantity
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc1155_holders": {
        "entries": [
          {
            "address_hash": "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c",
            "quantity": "1204",
            "rank": 2,
            "token_contract_address_hash": "0xe6903e124e5bdae8784674eb625f1c212efc789e"
          }
        ],
        "metadata": {
          "after": "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABTG5Y-0r_tquKOSt8wjzT_vdFF_bGgCZAAHaG9sZGVyc2QACHF1YW50aXR5dAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmYgAABLRkAANleHBhAGQABHNpZ25hAQ==",
          "before": "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABTG5Y-0r_tquKOSt8wjzT_vdFF_bGgCZAAHaG9sZGVyc2QACHF1YW50aXR5dAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmYgAABLRkAANleHBhAGQABHNpZ25hAQ==",
          "total_count": 5
        }
      }
    }
  }
  
  query {
    erc1155_holders(
      input: {
        contract_address: "0xe6903e124e5bdae8784674eb625f1c212efc789e"
        token_id: 1
        limit: 1
      }
    ) {
      entries {
        rank
        address_hash
        token_contract_address_hash
        quantity
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc1155_holders": {
        "entries": [
          {
            "address_hash": "0x46b6f87debd8f7607d00df47c31d2dc6d9999999",
            "quantity": "10001",
            "rank": 1,
            "token_contract_address_hash": "0xe6903e124e5bdae8784674eb625f1c212efc789e"
          }
        ],
        "metadata": {
          "after": "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABRGtvh969j3YH0A30fDHS3G2ZmZmWgCZAAHaG9sZGVyc2QACHF1YW50aXR5dAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmYgAAJxFkAANleHBhAGQABHNpZ25hAQ==",
          "before": null,
          "total_count": 3
        }
      }
    }
  }
  """
  erc1155_holders(input: Erc1155HoldersInput!): PaginateErc721Erc1155Holders

  """
  query {
    erc1155_inventory(
      input: {
        contract_address: "0xe6903e124e5bdae8784674eb625f1c212efc789e"
        token_id: 0
        limit: 1
      }
    ) {
      entries {
        token_id
        address_hash
        token_contract_address_hash
        value
  
        udt {
          id
          name
          eth_type
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  
  {
    "data": {
      "erc1155_inventory": {
        "entries": [
          {
            "address_hash": "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c",
            "token_contract_address_hash": "0xe6903e124e5bdae8784674eb625f1c212efc789e",
            "token_id": "0",
            "udt": {
              "eth_type": "ERC1155",
              "id": 48472,
              "name": null
            },
            "value": "73"
          }
        ],
        "metadata": {
          "after": "g3QAAAACZAACaWRiAB4JsWQACHRva2VuX2lkdAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmYQBkAANleHBhAGQABHNpZ25hAQ==",
          "before": null,
          "total_count": 4
        }
      }
    }
  }
  """
  erc1155_inventory(input: Erc721Erc1155InventoryInput!): PaginateErc1155Inventory

  """
  query {
    erc1155_token_transfers(
      input: {
        to_address: "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c"
        start_block_number: 0
        end_block_number: 909999
        limit: 1
        sorter: [
          { sort_type: ASC, sort_value: BLOCK_NUMBER }
          { sort_type: ASC, sort_value: TRANSACTION_HASH }
          { sort_type: ASC, sort_value: LOG_INDEX }
        ]
      }
    ) {
      entries {
        block {
          timestamp
        }
        transaction_hash
        block_number
        to_account {
          eth_address
        }
        to_address
        from_account {
          eth_address
        }
        token_id
        token_ids
        udt{
          id
          name
          eth_type
        }
      }
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "erc1155_token_transfers": {
        "entries": [
          {
            "block": {
              "timestamp": "2022-07-16T13:47:10.511000Z"
            },
            "block_number": 195916,
            "from_account": null,
            "to_account": {
              "eth_address": "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c"
            },
            "to_address": "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c",
            "token_id": "0",
            "token_ids": null,
            "transaction_hash": "0x9fa88935cd93531dedec0c1b6dd79a0de3e754b5600714d410a85abc3035e7e4",
            "udt": {
              "eth_type": "ERC1155",
              "id": 48435,
              "name": null
            }
          }
        ],
        "metadata": {
          "after": "g3QAAAADZAAMYmxvY2tfbnVtYmVyYgAC_UxkAAlsb2dfaW5kZXhhAGQAEHRyYW5zYWN0aW9uX2hhc2h0AAAAA2QACl9fc3RydWN0X19kACJFbGl4aXIuR29kd29rZW5FeHBsb3Jlci5DaGFpbi5IYXNoZAAKYnl0ZV9jb3VudGEgZAAFYnl0ZXNtAAAAIJ-oiTXNk1Md7ewMG23Xmg3j51S1YAcU1BCoWrwwNefk",
          "before": null,
          "total_count": 10
        }
      }
    }
  }
  
  query {
    erc1155_token_transfers(
      input: {
        to_address: "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c"
        start_block_number: 0
        end_block_number: 909999
        limit: 1
        token_id: "0"
        sorter: [
          { sort_type: ASC, sort_value: BLOCK_NUMBER }
          { sort_type: ASC, sort_value: TRANSACTION_HASH }
          { sort_type: ASC, sort_value: LOG_INDEX }
        ]
      }
    ) {
      entries {
        token_contract_address_hash
        block_number
        token_id
        token_ids
      }
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "erc1155_token_transfers": {
        "entries": [
          {
            "block_number": 195916,
            "token_contract_address_hash": "0x6e45a282f2176d95a2bccc1a369fc9cb3f0584a0",
            "token_id": "0",
            "token_ids": null
          }
        ],
        "metadata": {
          "after": "g3QAAAADZAAMYmxvY2tfbnVtYmVyYgAC_UxkAAlsb2dfaW5kZXhhAGQAEHRyYW5zYWN0aW9uX2hhc2h0AAAAA2QACl9fc3RydWN0X19kACJFbGl4aXIuR29kd29rZW5FeHBsb3Jlci5DaGFpbi5IYXNoZAAKYnl0ZV9jb3VudGEgZAAFYnl0ZXNtAAAAIJ-oiTXNk1Md7ewMG23Xmg3j51S1YAcU1BCoWrwwNefk",
          "before": null,
          "total_count": 5
        }
      }
    }
  }
  """
  erc1155_token_transfers(input: Erc721Erc1155TokenTransfersInput! = {combine_from_to: true, limit: 20, sorter: [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: LOG_INDEX}, {sort_type: ASC, sort_value: TRANSACTION_HASH}]}): PaginateTokenTransfers

  """
  query {
    erc1155_udts(
      input: {
        contract_address: "0xa87071a188e3e8d3e30f53a335ecc329d88026b7"
        limit: 1
        sorter: [{ sort_type: DESC, sort_value: EX_HOLDERS_COUNT }]
      }
    ) {
      entries {
        id
        name
        contract_address_hash
        eth_type
        holders_count
        token_type_count
        minted_count
      }
      metadata {
        total_count
        after
        before
      }
    }
  
    udt(
      input: { contract_address: "0xa87071a188e3e8d3e30f53a335ecc329d88026b7" }
    ) {
      id
      name
      script_hash
      eth_type
    }
  }
  
  {
    "data": {
      "erc1155_udts": {
        "entries": [
          {
            "contract_address_hash": "0xa87071a188e3e8d3e30f53a335ecc329d88026b7",
            "eth_type": "ERC1155",
            "holders_count": 4,
            "id": 53717,
            "minted_count": 31,
            "name": null,
            "token_type_count": 31
          }
        ],
        "metadata": {
          "after": null,
          "before": null,
          "total_count": 1
        }
      },
      "udt": {
        "eth_type": "ERC1155",
        "id": 53717,
        "name": null,
        "script_hash": null
      }
    }
  }
  
  query {
    erc1155_udts(
      input: {
        limit: 1
        sorter: [{ sort_type: DESC, sort_value: EX_HOLDERS_COUNT }]
      }
    ) {
      entries {
        id
        name
        contract_address_hash
        eth_type
        holders_count
        token_type_count
        minted_count
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc1155_udts": {
        "entries": [
          {
            "contract_address_hash": "0xb53f9c79eca97291c51a918779fc7a500fbb9e42",
            "eth_type": "ERC1155",
            "holders_count": 7,
            "id": 24008,
            "minted_count": 30,
            "name": null,
            "token_type_count": 30
          }
        ],
        "metadata": {
          "after": "g3QAAAACZAACaWRiAABdyGgCZAAJdV9ob2xkZXJzZAANaG9sZGVyc19jb3VudGEH",
          "before": null,
          "total_count": 524
        }
      }
    }
  }
  
  query {
    erc1155_udts(
      input: {
        limit: 1
        sorter: [{ sort_type: DESC, sort_value: EX_HOLDERS_COUNT }]
        after: "g3QAAAACZAACaWRiAABdyGgCZAAJdV9ob2xkZXJzZAANaG9sZGVyc19jb3VudGEH"
      }
    ) {
      entries {
        id
        name
        contract_address_hash
        eth_type
        holders_count
        token_type_count
        minted_count
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc1155_udts": {
        "entries": [
          {
            "contract_address_hash": "0xe6903e124e5bdae8784674eb625f1c212efc789e",
            "eth_type": "ERC1155",
            "holders_count": 5,
            "id": 48472,
            "minted_count": 28,
            "name": null,
            "token_type_count": 6
          }
        ],
        "metadata": {
          "after": "g3QAAAACZAACaWRiAAC9WGgCZAAJdV9ob2xkZXJzZAANaG9sZGVyc19jb3VudGEF",
          "before": "g3QAAAACZAACaWRiAAC9WGgCZAAJdV9ob2xkZXJzZAANaG9sZGVyc19jb3VudGEF",
          "total_count": 524
        }
      }
    }
  }
  """
  erc1155_udts(input: Erc721Erc1155UdtsInput! = {limit: 20, sorter: [{sort_type: ASC, sort_value: ID}]}): PaginateErc1155Udts

  """
  query {
    erc1155_user_token(
      input: {
        user_address: "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c"
        contract_address: "0xe6903e124e5bdae8784674eb625f1c212efc789e"
        token_id: 0
      }
    ) {
      value
      token_type
      token_id
      token_contract_address_hash
    }
  }
  
  {
    "data": {
      "erc1155_user_token": {
        "token_contract_address_hash": "0xe6903e124e5bdae8784674eb625f1c212efc789e",
        "token_id": "0",
        "token_type": "ERC1155",
        "value": "73"
      }
    }
  }
  """
  erc1155_user_token(input: Erc1155UserTokenInput!): Erc1155UserToken

  """
  query {
    erc721_holders(
      input: {
        contract_address: "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd"
        limit: 1
      }
    ) {
      entries {
        rank
        address_hash
        token_contract_address_hash
        quantity
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc721_holders": {
        "entries": [
          {
            "address_hash": "0xd8939812d27b0cfaa78e6925fba92bd2d61430ef",
            "quantity": "16",
            "rank": 1,
            "token_contract_address_hash": "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd"
          }
        ],
        "metadata": {
          "after": "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABTYk5gS0nsM-qeOaSX7qSvS1hQw72gCZAAHaG9sZGVyc2QACHF1YW50aXR5YRA=",
          "before": null,
          "total_count": 308
        }
      }
    }
  }
  
  query {
    erc721_holders(
      input: {
        contract_address: "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd"
        limit: 1
        after: "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABTYk5gS0nsM-qeOaSX7qSvS1hQw72gCZAAHaG9sZGVyc2QACHF1YW50aXR5YRA="
      }
    ) {
      entries {
        rank
        address_hash
        token_contract_address_hash
        quantity
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc721_holders": {
        "entries": [
          {
            "address_hash": "0x129ee9091f6017ee8cfd249402e3275fa3bc75e6",
            "quantity": "10",
            "rank": 2,
            "token_contract_address_hash": "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd"
          }
        ],
        "metadata": {
          "after": "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABQSnukJH2AX7oz9JJQC4ydfo7x15mgCZAAHaG9sZGVyc2QACHF1YW50aXR5YQo=",
          "before": "g3QAAAACaAJkAAdob2xkZXJzZAAMYWRkcmVzc19oYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhFGQABWJ5dGVzbQAAABQSnukJH2AX7oz9JJQC4ydfo7x15mgCZAAHaG9sZGVyc2QACHF1YW50aXR5YQo=",
          "total_count": 308
        }
      }
    }
  }
  """
  erc721_holders(input: Erc721HoldersInput!): PaginateErc721Erc1155Holders

  """
  query {
    erc721_inventory(
      input: {
        contract_address: "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd"
        limit: 1
      }
    ) {
      entries {
        token_id
        address_hash
        token_contract_address_hash
        value
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc721_inventory": {
        "entries": [
          {
            "address_hash": "0x7ec331e53da2ad677a7636b2da07d8dbea427ab7",
            "token_contract_address_hash": "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd",
            "token_id": "2000",
            "value": "1"
          }
        ],
        "metadata": {
          "after": "g3QAAAACZAACaWRiABXtp2QACHRva2VuX2lkdAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmYgAAB9BkAANleHBhAGQABHNpZ25hAQ==",
          "before": null,
          "total_count": 2000
        }
      }
    }
  }
  """
  erc721_inventory(input: Erc721Erc1155InventoryInput!): PaginateErc721Inventory

  """
  query {
    erc721_token_transfers(
      input: {
        to_address: "0x0000000000ce6d8c1fba76f26d6cc5db71432710"
        start_block_number: 90
        end_block_number: 909999
        limit: 1
        sorter: [
          { sort_type: ASC, sort_value: BLOCK_NUMBER }
          { sort_type: ASC, sort_value: TRANSACTION_HASH }
          { sort_type: ASC, sort_value: LOG_INDEX }
        ]
      }
    ) {
      entries {
        block {
          timestamp
        }
        transaction_hash
        block_number
        to_account {
          eth_address
        }
        to_address
        from_account {
          eth_address
        }
        token_id
        token_ids
      }
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  
  {
    "data": {
      "erc721_token_transfers": {
        "entries": [
          {
            "block": {
              "timestamp": "2022-08-28T05:15:00.300000Z"
            },
            "block_number": 320956,
            "from_account": null,
            "to_account": {
              "eth_address": "0x0000000000ce6d8c1fba76f26d6cc5db71432710"
            },
            "to_address": "0x0000000000ce6d8c1fba76f26d6cc5db71432710",
            "token_id": "558",
            "token_ids": null,
            "transaction_hash": "0xe10b9659f948de345ab4aa95d8a2ed20e2ac014c44ad7aa7862485973ef3d08f"
          }
        ],
        "metadata": {
          "after": "g3QAAAADZAAMYmxvY2tfbnVtYmVyYgAE5bxkAAlsb2dfaW5kZXhhAGQAEHRyYW5zYWN0aW9uX2hhc2h0AAAAA2QACl9fc3RydWN0X19kACJFbGl4aXIuR29kd29rZW5FeHBsb3Jlci5DaGFpbi5IYXNoZAAKYnl0ZV9jb3VudGEgZAAFYnl0ZXNtAAAAIOELlln5SN40WrSqldii7SDirAFMRK16p4YkhZc-89CP",
          "before": null,
          "total_count": 4
        }
      }
    }
  }
  """
  erc721_token_transfers(input: Erc721Erc1155TokenTransfersInput! = {combine_from_to: true, limit: 20, sorter: [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: LOG_INDEX}, {sort_type: ASC, sort_value: TRANSACTION_HASH}]}): PaginateTokenTransfers

  """
  query {
    erc721_udts(
      input: { contract_address: "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd" }
    ) {
      entries {
        id
        name
        contract_address_hash
        eth_type
        holders_count
        minted_count
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc721_udts": {
        "entries": [
          {
            "contract_address_hash": "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd",
            "eth_type": "ERC721",
            "holders_count": 308,
            "id": 58460,
            "minted_count": 2000,
            "name": null
          }
        ],
        "metadata": {
          "after": null,
          "before": null,
          "total_count": 1
        }
      }
    }
  }
  
  query {
    erc721_udts(
      input: {
        limit: 1
        sorter: [{ sort_type: DESC, sort_value: EX_HOLDERS_COUNT }]
        after: "g3QAAAABaAJkAAl1X2hvbGRlcnNkAA1ob2xkZXJzX2NvdW50YgAAB9A="
      }
    ) {
      entries {
        id
        name
        contract_address_hash
        eth_type
        holders_count
        minted_count
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "erc721_udts": {
        "entries": [
          {
            "contract_address_hash": "0x310a1f73379a658ef0eb9c4e5bd1006a24a5ad79",
            "eth_type": "ERC721",
            "holders_count": 1003,
            "id": 5845,
            "minted_count": 1000,
            "name": null
          }
        ],
        "metadata": {
          "after": "g3QAAAABaAJkAAl1X2hvbGRlcnNkAA1ob2xkZXJzX2NvdW50YgAAA-s=",
          "before": "g3QAAAABaAJkAAl1X2hvbGRlcnNkAA1ob2xkZXJzX2NvdW50YgAAA-s=",
          "total_count": 3193
        }
      }
    }
  }
  """
  erc721_udts(input: Erc721Erc1155UdtsInput! = {limit: 20, sorter: [{sort_type: ASC, sort_value: ID}]}): PaginateErc721Udts

  """
  function: get list of logs by filter or conditions
  
  request-example:
  query {
    logs(input: {first_topic: "0x95e0325a2d4f803db1237b0e454f7d9a09ec46941e478e3e98c510d8f1506031",end_block_number:
  9988, page: 1, page_size: 1}) {
      transaction_hash
      block_number
      address_hash
      data
      first_topic
      second_topic
      third_topic
      fourth_topic
    }
  }
  
  result-example:
  {
    "data": {
      "logs": [
        {
          "address_hash": "0x6589f40e144a03da53234dc98a47da36160dbf77",
          "block_number": 9988,
          "data": "0x00000000000000000000000000000000000000000000000000000000000027040000000000000000000000000000000000000000000000000000000000000000",
          "first_topic": "0x95e0325a2d4f803db1237b0e454f7d9a09ec46941e478e3e98c510d8f1506031",
          "fourth_topic": null,
          "second_topic": null,
          "third_topic": null,
          "transaction_hash": "0xeaf751c7eb86b679b7138fac22c603fccb0ca397bccce5a74e5372da7ea12c22"
        }
      ]
    }
  }
  """
  logs(input: LogInput!): [Log]

  """
  function: get smart contract by address
  
  request-result-example:
  query {
    smart_contract(
      input: { contract_address: "0x2503A1A79A443F3961EE96A8C5EC513638129614" }
    ) {
      name
      account_id
      account {
        eth_address
      }
    }
  }
  {
    "data": {
      "smart_contract": {
        "account": {
          "eth_address": "0x2503a1a79a443f3961ee96a8c5ec513638129614"
        },
        "account_id": "6841",
        "name": "EIP20"
      }
    }
  }
  
  request-result-example2:
  query {
    smart_contract(
      input: { script_hash: "0x9B55204439C78D3B9CBCC62C03F31E47C8457FD39CA9A9EB805B364B45C26C38" }
    ) {
      name
      account_id
      account {
        eth_address
      }
    }
  }
  {
    "data": {
      "smart_contract": {
        "account": {
          "eth_address": "0x2503a1a79a443f3961ee96a8c5ec513638129614"
        },
        "account_id": "6841",
        "name": "EIP20"
      }
    }
  }
  """
  smart_contract(input: SmartContractInput!): SmartContract

  """
  function: get list of smart contracts
  
  request-result-example:
  query {
    smart_contracts(input: { sorter: [{ sort_type: ASC, sort_value: ID }] }) {
      entries {
        name
        account_id
        account {
          eth_address
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  
  {
    "data": {
      "smart_contracts": {
        "entries": [
          {
            "account": {
              "eth_address": "0x2503a1a79a443f3961ee96a8c5ec513638129614"
            },
            "account_id": "6841",
            "name": "EIP20"
          }
        ],
        "metadata": {
          "after": null,
          "before": null,
          "total_count": 1
        }
      }
    }
  }
  
  multi-table-sorter-example:
  query {
    smart_contracts(
      input: { sorter: [{ sort_type: ASC, sort_value: EX_TX_COUNT }] }
    ) {
      entries {
        name
        account_id
        account {
          eth_address
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  {
    "data": {
      "smart_contracts": {
        "entries": [
          {
            "account": {
              "eth_address": "0x2503a1a79a443f3961ee96a8c5ec513638129614"
            },
            "account_id": "6841",
            "name": "EIP20"
          }
        ],
        "metadata": {
          "after": null,
          "before": null,
          "total_count": 1
        }
      }
    }
  }
  """
  smart_contracts(input: SmartContractsInput): PaginateSmartContracts

  """
  check by addresses example:
  query {
    sourcify_check_by_addresses(
      input: { addresses: ["0x7A4a65Db21864384d2D21a60367d7Fd5c86F8Fba"] }
    ) {
      address
      status
      chain_ids
    }
  }
  
  
  {
    "data": {
      "sourcify_check_by_addresses": [
        {
          "address": "0x7a4a65db21864384d2d21a60367d7fd5c86f8fba",
          "chain_ids": [
            "71401"
          ],
          "status": "perfect"
        }
      ]
    }
  }
  """
  sourcify_check_by_addresses(input: SourcifyCheckByAddressesInput!): [SourcifyCheckByAddresses]

  """
  function: get list of token approvals by filter
  
  example:
  query {
    token_approvals(
      input: {
        address: "0x966b30e576a4d6731996748b48dd67c94ef29067"
        token_type: ERC20
        limit: 2
  
        sorter: [
          { sort_type: DESC, sort_value: BLOCK_NUMBER },
          { sort_type: DESC, sort_value: ID }
        ]
      }
    ) {
      entries {
        transaction_hash
        udt {
          id
          name
          eth_type
        }
        block {
          timestamp
        }
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "token_approvals": {
        "entries": [
          {
            "block": {
              "timestamp": "2022-05-08T05:19:15.637000Z"
            },
            "transaction_hash": "0xa22dc752ce79bc923ea86d0135b39074c6fc56a7c10cb60879180bcfd81142c7",
            "udt": {
              "eth_type": "ERC20",
              "id": 22,
              "name": "testERC20"
            }
          }
        ],
        "metadata": {
          "after": "g3QAAAABZAAMYmxvY2tfbnVtYmVyYVk=",
          "before": null,
          "total_count": 6
        }
      }
    }
  }
  """
  token_approvals(input: TokenApprovalInput! = {limit: 20, sorter: [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: ID}]}): PaginateTokenApprovals

  """
  function: get list of token transfers by filter
  
  example:
  query {
    token_transfers(
      input: {
        from_address: "0x966b30e576a4d6731996748b48dd67c94ef29067"
        to_address: "0xbd6250d17fc557dfe39a9eb3882c421d4c7f6413"
        start_block_number: 90
        end_block_number: 90
        limit: 2
        combine_from_to: true
  
        sorter: [
          { sort_type: ASC, sort_value: BLOCK_NUMBER }
          { sort_type: ASC, sort_value: TRANSACTION_HASH }
          { sort_type: ASC, sort_value: LOG_INDEX }
        ]
      }
    ) {
      entries {
        transaction_hash
        block_number
        to_account {
          eth_address
        }
        to_address
        from_account {
          eth_address
        }
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "token_transfers": {
        "entries": [
          {
            "block_number": 90,
            "from_account": {
              "eth_address": "0x966b30e576a4d6731996748b48dd67c94ef29067"
            },
            "to_account": {
              "eth_address": "0xc6a44e4d2216a98b3a5086a64a33d94fbcc8fec3"
            },
            "to_address": "0xc6a44e4d2216a98b3a5086a64a33d94fbcc8fec3",
            "transaction_hash": "0x65ea60c7291f5aec6e9f86f6b4af97f6287409fc72f66975af6203721d10d409"
          },
          {
            "block_number": 90,
            "from_account": {
              "eth_address": "0x966b30e576a4d6731996748b48dd67c94ef29067"
            },
            "to_account": {
              "eth_address": "0xc6a44e4d2216a98b3a5086a64a33d94fbcc8fec3"
            },
            "to_address": "0xc6a44e4d2216a98b3a5086a64a33d94fbcc8fec3",
            "transaction_hash": "0xc3c63aa91100e6c14cea294559eacea33d6a12ed3be89f303247e63f670c2c34"
          }
        ],
        "metadata": {
          "after": "g3QAAAADZAAMYmxvY2tfbnVtYmVyYVpkAAlsb2dfaW5kZXhhAWQAEHRyYW5zYWN0aW9uX2hhc2h0AAAAA2QACl9fc3RydWN0X19kACJFbGl4aXIuR29kd29rZW5FeHBsb3Jlci5DaGFpbi5IYXNoZAAKYnl0ZV9jb3VudGEgZAAFYnl0ZXNtAAAAIMPGOqkRAObBTOopRVnqzqM9ahLtO-ifMDJH5j9nDCw0",
          "before": null,
          "total_count": 3
        }
      }
    }
  }
  
  example2:
  query {
    token_transfers(
      input: {
        from_address: "0x966b30e576a4d6731996748b48dd67c94ef29067"
        to_address: "0xbd6250d17fc557dfe39a9eb3882c421d4c7f6413"
        start_block_number: 90
        end_block_number: 909999
        age_range_end: "2022-05-08T05:19:26.237000Z"
        limit: 1
        combine_from_to: true
        sorter: [
          { sort_type: ASC, sort_value: BLOCK_NUMBER }
          { sort_type: ASC, sort_value: TRANSACTION_HASH }
          { sort_type: ASC, sort_value: LOG_INDEX }
        ]
      }
    ) {
      entries {
        block {
          timestamp
        }
        transaction_hash
        block_number
        to_account {
          eth_address
        }
        to_address
        from_account {
          eth_address
        }
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  
  {
    "data": {
      "token_transfers": {
        "entries": [
          {
            "block": {
              "timestamp": "2022-05-08T05:19:25.237000Z"
            },
            "block_number": 90,
            "from_account": {
              "eth_address": "0x966b30e576a4d6731996748b48dd67c94ef29067"
            },
            "to_account": {
              "eth_address": "0xc6a44e4d2216a98b3a5086a64a33d94fbcc8fec3"
            },
            "to_address": "0xc6a44e4d2216a98b3a5086a64a33d94fbcc8fec3",
            "transaction_hash": "0x65ea60c7291f5aec6e9f86f6b4af97f6287409fc72f66975af6203721d10d409"
          }
        ],
        "metadata": {
          "after": "g3QAAAADZAAMYmxvY2tfbnVtYmVyYVpkAAlsb2dfaW5kZXhhAWQAEHRyYW5zYWN0aW9uX2hhc2h0AAAAA2QACl9fc3RydWN0X19kACJFbGl4aXIuR29kd29rZW5FeHBsb3Jlci5DaGFpbi5IYXNoZAAKYnl0ZV9jb3VudGEgZAAFYnl0ZXNtAAAAIGXqYMcpH1rsbp-G9rSvl_YodAn8cvZpda9iA3IdENQJ",
          "before": null,
          "total_count": 3
        }
      }
    }
  }
  """
  token_transfers(input: Erc20TokenTransfersInput! = {combine_from_to: true, limit: 20, sorter: [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: LOG_INDEX}, {sort_type: ASC, sort_value: TRANSACTION_HASH}]}): PaginateTokenTransfers

  """
  function: get transaction by transaction_hash
  
  request-example:
  query {
    transaction(
      input: {
        eth_hash: "0xcdbda9ec578e73e886446d3bd5ca070d77a908be4187fc0e835c7c1598a3fcfa"
      }
    ) {
      hash
      nonce
      type
      index
      from_account {
        eth_address
        type
      }
      to_account {
        eth_address
        type
      }
      polyjuice {
        is_create
        value
        status
        input
        created_contract_address_hash
        gas_used
        gas_limit
        gas_price
      }
      block {
        number
        hash
        timestamp
        status
        layer1_block_number
      }
    }
  }
  
  
  result-example:
  {
    "data": {
      "transaction": {
        "block": {
          "hash": "0x08b5d6747151e7cc0a2ffd81505d3db39af268c9c1c753a22e7c80890e3b94c5",
          "layer1_block_number": 5293647,
          "number": 81,
          "status": "FINALIZED",
          "timestamp": "2022-05-08T05:15:14.234000Z"
        },
        "from_account": {
          "eth_address": "0x966b30e576a4d6731996748b48dd67c94ef29067",
          "type": "ETH_USER"
        },
        "hash": "0xc7ab89121ab5727b09e007cc04176216e4d5fab1fb0ebe33320b7075e7e54533",
        "index": 0,
        "nonce": 0,
        "polyjuice": {
          "created_contract_address_hash": "0xf9f9bd767dd10ad384182769d47d9e239f281bcd",
          "gas_limit": "245",
          "gas_price": "1",
          "gas_used": "245",
          "input": "0x608060405234801561001057600080fd5b506103e2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636fd902e11161005b5780636fd902e114610105578063796b89b9146101235780637c0dacdb14610141578063ee82ac5e1461014b57610088565b806312e05dd11461008d5780632df8e949146100ab5780633408e470146100c957806342cbb15c146100e7575b600080fd5b61009561017b565b6040516100a291906102a3565b60405180910390f35b6100b3610183565b6040516100c0919061026d565b60405180910390f35b6100d161018b565b6040516100de91906102a3565b60405180910390f35b6100ef610193565b6040516100fc91906102a3565b60405180910390f35b61010d6101a7565b60405161011a91906102a3565b60405180910390f35b61012b6101af565b60405161013891906102a3565b60405180910390f35b6101496101b7565b005b61016560048036038101906101609190610213565b6101f3565b6040516101729190610288565b60405180910390f35b600044905090565b600041905090565b600046905090565b60006001436101a291906102e7565b905090565b600043905090565b600042905090565b7f95e0325a2d4f803db1237b0e454f7d9a09ec46941e478e3e98c510d8f15060314343406040516101e99291906102be565b60405180910390a1565b600081409050919050565b60008135905061020d81610395565b92915050565b60006020828403121561022957610228610390565b5b6000610237848285016101fe565b91505092915050565b6102498161031b565b82525050565b6102588161032d565b82525050565b61026781610357565b82525050565b60006020820190506102826000830184610240565b92915050565b600060208201905061029d600083018461024f565b92915050565b60006020820190506102b8600083018461025e565b92915050565b60006040820190506102d3600083018561025e565b6102e0602083018461024f565b9392505050565b60006102f282610357565b91506102fd83610357565b9250828210156103105761030f610361565b5b828203905092915050565b600061032682610337565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61039e81610357565b81146103a957600080fd5b5056fea2646970667358221220d273a25c31e711ab76ca9928e49a2f327bab9ac3707697ef7567ca28d6673d3a64736f6c63430008060033",
          "is_create": true,
          "status": "SUCCEED",
          "value": "0"
        },
        "to_account": {
          "eth_address": "0x2f760c8f8656bde4995f26b8963e2dd801000000",
          "type": "POLYJUICE_CREATOR"
        },
        "type": "POLYJUICE"
      }
    }
  }
  """
  transaction(input: TransactionInput!): Transaction

  """
  sorter-example:
  query {
    transactions(
      input: {
        limit: 1
        sorter: [
          { sort_type: ASC, sort_value: BLOCK_NUMBER }
          { sort_type: ASC, sort_value: HASH }
          { sort_type: ASC, sort_value: INDEX }
        ]
      }
    ) {
      entries {
        hash
        eth_hash
        block_hash
        block_number
        type
        from_account_id
        from_account {
          script_hash
          id
          eth_address
        }
        to_account_id
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "transactions": {
        "entries": [
          {
            "block_hash": "0x4ed214a4aa0085da12c80468ea299d85ea043d04b38b93e26218bab7849f5e40",
            "block_number": 6,
            "eth_hash": null,
            "from_account": {
              "eth_address": "0x715ab282b873b79a7be8b0e8c13c4e8966a52040",
              "id": 3,
              "script_hash": "0x495d9cfb7b6faeaeb0f5a7ed81a830a477f7aeea8d53ef73abdc2ec2f5fed07c"
            },
            "from_account_id": 3,
            "hash": "0xc621e5cd5a7d49c32e87b59956886c3747be77ecf7a7942ebaa5e2de96e9aad3",
            "to_account_id": 0,
            "type": "POLYJUICE_CREATOR"
          }
        ],
        "metadata": {
          "after": "g3QAAAADZAAMYmxvY2tfbnVtYmVyYQZkAARoYXNodAAAAANkAApfX3N0cnVjdF9fZAAiRWxpeGlyLkdvZHdva2VuRXhwbG9yZXIuQ2hhaW4uSGFzaGQACmJ5dGVfY291bnRhIGQABWJ5dGVzbQAAACDGIeXNWn1Jwy6HtZlWiGw3R7537PenlC66peLelumq02QABWluZGV4YQA=",
          "before": null,
          "total_count": 10000
        }
      }
    }
  }
  
  block-number-and-age-range-example:
  query {
    transactions(
      input: {
        to_script_hash: "0x08c9937e412e135928fd6dec7255965ddd7df4d5a163564b60895100bb3b2f9e"
        start_block_number: 1
        end_block_number: 2624399
        limit: 1
        age_range_start: "2022-06-11T16:28:47Z"
        age_range_end: "2022-06-11T16:29:01.455000Z"
        sorter: [{ sort_type: ASC, sort_value: BLOCK_NUMBER }]
      }
    ) {
      entries {
        block_hash
        block {
          timestamp
        }
        block_number
        type
        from_account_id
        from_account {
          script_hash
          id
          eth_address
        }
        to_account_id
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  
  {
    "data": {
      "transactions": {
        "entries": [
          {
            "block": {
              "timestamp": "2022-06-11T16:28:47.111000Z"
            },
            "block_hash": "0xa89010460abfb53bf85fc74ae98480d3d6c1708c2ce8586aac549544289e5a23",
            "block_number": 95494,
            "from_account": {
              "eth_address": "0x2088d0e35c23e7c344f96e57be19043d6e2a44f3",
              "id": 14578,
              "script_hash": "0x07cb90b74c9b22a6ff8357332b589e8dbfc3cb119d4535c76cc51c43ab9c5f9d"
            },
            "from_account_id": 14578,
            "to_account_id": 2,
            "type": "ETH_ADDRESS_REGISTRY"
          }
        ],
        "metadata": {
          "after": "g3QAAAABZAAMYmxvY2tfbnVtYmVyYgABdQY=",
          "before": null,
          "total_count": 3
        }
      }
    }
  }
  
  from-to-example:
  query {
    transactions(
      input: {
        from_eth_address: "0x2088d0e35c23e7c344f96e57be19043d6e2a44f3"
        start_block_number: 1
        end_block_number: 2624399
        limit: 1
        sorter: [{sort_type: ASC, sort_value: BLOCK_NUMBER}]
      }
    ) {
      entries {
        block_hash
        block_number
        type
        from_account_id
        from_account {
          script_hash
          id
          eth_address
        }
        to_account_id
        to_account {
          script_hash
          id
          eth_address
        }
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "transactions": {
        "entries": [
          {
            "block_hash": "0x9e12e1de57b66f0d84c95a6a9369715f82d21bbf1ff943ae891739c6343ea781",
            "block_number": 61049,
            "from_account": {
              "eth_address": "0x2088d0e35c23e7c344f96e57be19043d6e2a44f3",
              "id": 14578,
              "script_hash": "0x07cb90b74c9b22a6ff8357332b589e8dbfc3cb119d4535c76cc51c43ab9c5f9d"
            },
            "from_account_id": 14578,
            "to_account": {
              "eth_address": "0x07fc54ff9f92bfa3679104778252a1c42f7b48d9",
              "id": 18576,
              "script_hash": "0xaae0058ff21c2d8e2fc02821e12ef074f846ff66c0f1689020c48fbcc481677f"
            },
            "to_account_id": 18576,
            "type": "POLYJUICE"
          }
        ],
        "metadata": {
          "after": "g3QAAAABZAAMYmxvY2tfbnVtYmVyYgAA7nk=",
          "before": null,
          "total_count": 962
        }
      }
    }
  }
  
  combine-example:
  query {
    transactions(
      input: {
        from_eth_address: "0x2088d0e35c23e7c344f96e57be19043d6e2a44f3"
        to_eth_address: "0x2088d0e35c23e7c344f96e57be19043d6e2a44f3"
        combine_from_to: false
        start_block_number: 1
        end_block_number: 2624399
        limit: 1
        sorter: [{ sort_type: ASC, sort_value: BLOCK_NUMBER }]
      }
    ) {
      entries {
        block_hash
        block_number
        type
        from_account_id
        from_account {
          script_hash
          id
          eth_address
        }
        to_account_id
        to_account {
          script_hash
          id
          eth_address
        }
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "transactions": {
        "entries": [],
        "metadata": {
          "after": null,
          "before": null,
          "total_count": 0
        }
      }
    }
  }
  pending-transaction-example:
  query {
    transactions(
      input: {
        status: PENDING
        sorter: [{ sort_type: DESC, sort_value: BLOCK_NUMBER }]
      }
    ) {
      entries {
        block_hash
        hash
      }
  
      metadata {
        total_count
        before
        after
      }
    }
  }
  
  {
    "data": {
      "transactions": {
        "entries": [
          {
            "block_hash": null,
            "hash": "0xc8e2bea0d8f779ea10e97f9139540e3c6dee8b2267285c71559477a1e5c33507"
          },
        ],
        "metadata": {
          "after": null,
          "before": null,
          "total_count": 0
        }
      }
    }
  }
  """
  transactions(input: TransactionsInput = {combine_from_to: true, limit: 20, sorter: [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: INDEX}, {sort_type: ASC, sort_value: HASH}]}): PaginateTrasactions

  """
  function: get udt by contract address
  
  contract address example:
  query {
    udt(
      input: { contract_address: "0x2275AFE815DE66BEABE7A2C03005537AB843AFB2" }
    ) {
      id
      name
      script_hash
      contract_address_hash
    }
  }
  
  {
    "data": {
      "udt": {
        "contract_address_hash": "0x2275afe815de66beabe7a2c03005537ab843afb2",
        "id": "36050",
        "name": "GodwokenToken on testnet_v1",
        "script_hash": null
      }
    }
  }
  
  id example:
  query {
    udt(
      input: {
        id: 36050
        contract_address: "0x2275AFE815DE66BEABE7A2C03005537AB843AFB2"
      }
    ) {
      id
      bridge_account_id
      name
      script_hash
      contract_address_hash
    }
  }
  
  
  {
    "data": {
      "udt": {
        "bridge_account_id": null,
        "contract_address_hash": "0x2275afe815de66beabe7a2c03005537ab843afb2",
        "id": "36050",
        "name": "GodwokenToken on testnet_v1",
        "script_hash": null
      }
    }
  }
  """
  udt(input: UdtInput!): Udt

  """
  function: get list of udts
  
  pagination-example:
  query {
    udts(
      input: {
        limit: 1
        after: "g3QAAAABZAACaWRhAQ=="
        sorter: [{ sort_type: ASC, sort_value: ID }]
      }
    ) {
      entries {
        id
        name
        type
        supply
        account {
          eth_address
          script_hash
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "udts": {
        "entries": [
          {
            "account": {
              "eth_address": null,
              "script_hash": "0x64050af0d25c38ddf9455b8108654f7c5cc30fe6d871a303d83b1020edddd7a7"
            },
            "id": "80",
            "name": null,
            "supply": null,
            "type": "BRIDGE"
          }
        ],
        "metadata": {
          "after": "g3QAAAABZAACaWRhUA==",
          "before": "g3QAAAABZAACaWRhUA==",
          "total_count": 14
        }
      }
    }
  }
  
  
  fuzzy-name-example:
  fuzzy name use postgresql ilike keyword, pattern matching docs like:
  https://www.postgresql.org/docs/current/functions-matching.html#FUNCTIONS-LIKE
  
  query {
    udts(
      input: {
        limit: 1
        fuzzy_name: "%ckb%"
        sorter: [{ sort_type: ASC, sort_value: ID }]
      }
    ) {
      entries {
        id
        name
        type
        supply
        account {
          eth_address
          script_hash
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "udts": {
        "entries": [
          {
            "account": {
              "eth_address": null,
              "script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
            },
            "id": "1",
            "name": "pCKB",
            "supply": "12800091655514882421855103",
            "type": "BRIDGE"
          }
        ],
        "metadata": {
          "after": null,
          "before": null,
          "total_count": 1
        }
      }
    }
  }
  
  sorter-example:
  query {
    udts(
      input: {
        limit: 3
        sorter: [{ sort_type: ASC, sort_value: SUPPLY }]
      }
    ) {
      entries {
        id
        name
        type
        supply
        account {
          eth_address
          script_hash
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "udts": {
        "entries": [
          {
            "account": {
              "eth_address": "0x2503a1a79a443f3961ee96a8c5ec513638129614",
              "script_hash": "0x9b55204439c78d3b9cbcc62c03f31e47c8457fd39ca9a9eb805b364b45c26c38"
            },
            "id": "6841",
            "name": "test",
            "supply": "111",
            "type": "NATIVE"
          },
          {
            "account": {
              "eth_address": null,
              "script_hash": "0x3e1301e759261b676ce68d0d97936cd431a4af2a34072aa94e44655909765eb4"
            },
            "id": "6571",
            "name": "GodwokenToken on testnet_v1",
            "supply": "3247",
            "type": "BRIDGE"
          },
          {
            "account": {
              "eth_address": "0xd3ecf26a4a1e99c8717d7d8e365933fffa7d74d6",
              "script_hash": "0xb9150cbee429e205f9c956da7def16344232f50c851d9a5b0f7ef6f211c91cbf"
            },
            "id": "20021",
            "name": " My Hardhat Token",
            "supply": "100000000000000000000",
            "type": "NATIVE"
          }
        ],
        "metadata": {
          "after": "g3QAAAABZAAGc3VwcGx5dAAAAARkAApfX3N0cnVjdF9fZAAORWxpeGlyLkRlY2ltYWxkAARjb2VmbgkAAAAQYy1ex2sFZAADZXhwYQBkAARzaWduYQE=",
          "before": null,
          "total_count": 16
        }
      }
    }
  }
  
  sorter-example:
  query {
    udts(
      input: {
        limit: 3
        sorter: [{ sort_type: ASC, sort_value: NAME }]
      }
    ) {
      entries {
        id
        name
        type
        supply
        account {
          eth_address
          script_hash
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "udts": {
        "entries": [
          {
            "account": {
              "eth_address": null,
              "script_hash": "0x3e1301e759261b676ce68d0d97936cd431a4af2a34072aa94e44655909765eb4"
            },
            "id": "6571",
            "name": "GodwokenToken on testnet_v1",
            "supply": "3247",
            "type": "BRIDGE"
          },
          {
            "account": {
              "eth_address": "0xd3ecf26a4a1e99c8717d7d8e365933fffa7d74d6",
              "script_hash": "0xb9150cbee429e205f9c956da7def16344232f50c851d9a5b0f7ef6f211c91cbf"
            },
            "id": "20021",
            "name": " My Hardhat Token",
            "supply": "100000000000000000000",
            "type": "NATIVE"
          },
          {
            "account": {
              "eth_address": null,
              "script_hash": "0x595cc14e574a708dc70a320d2026f79374246ed4659261131cdda7dd5814b5ca"
            },
            "id": "1",
            "name": "pCKB",
            "supply": "12800091655514882421855103",
            "type": "BRIDGE"
          }
        ],
        "metadata": {
          "after": "g3QAAAABZAAEbmFtZW0AAAAEcENLQg==",
          "before": null,
          "total_count": 16
        }
      }
    }
  }
  
  holders example:
  query {
    udts(
      input: {
        limit: 1
        sorter: [{ sort_type: DESC, sort_value: EX_HOLDERS_COUNT }]
        after: "g3QAAAABaAJkAAl1X2hvbGRlcnNkAA1ob2xkZXJzX2NvdW50YgAAB9A="
      }
    ) {
      entries {
        id
        name
        type
        supply
        holders_count
        account {
          eth_address
          script_hash
        }
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "udts": {
        "entries": [
          {
            "account": {
              "eth_address": "0x975ab64f4901af5f0c96636dea0b9de3419d0c2f",
              "script_hash": "0xb01d03bbed4d9b55cfc484a3329875df13832c64e53c554233e18231026da891"
            },
            "holders_count": 1981,
            "id": 63191,
            "name": "CKB",
            "supply": "31236920264242650421855103",
            "type": "NATIVE"
          }
        ],
        "metadata": {
          "after": "g3QAAAABaAJkAAl1X2hvbGRlcnNkAA1ob2xkZXJzX2NvdW50YgAAB70=",
          "before": "g3QAAAABaAJkAAl1X2hvbGRlcnNkAA1ob2xkZXJzX2NvdW50YgAAB70=",
          "total_count": 3758
        }
      }
    }
  }
  """
  udts(input: UdtsInput = {limit: 20, sorter: [{sort_type: ASC, sort_value: ID}]}): PaginateUdts

  """
  query {
    user_erc1155_assets(
      input: {
        user_address: "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c"
        limit: 1
      }
    ) {
      entries {
        token_id
        address_hash
        token_contract_address_hash
        value
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "user_erc1155_assets": {
        "entries": [
          {
            "address_hash": "0xc6e58fb4affb6ab8a392b7cc23cd3fef74517f6c",
            "token_contract_address_hash": "0xe6903e124e5bdae8784674eb625f1c212efc789e",
            "token_id": "0",
            "value": "73"
          }
        ],
        "metadata": {
          "after": "g3QAAAACZAAMYmxvY2tfbnVtYmVyYgAEU89kABB2YWx1ZV9mZXRjaGVkX2F0dAAAAA1kAApfX3N0cnVjdF9fZAAPRWxpeGlyLkRhdGVUaW1lZAAIY2FsZW5kYXJkABNFbGl4aXIuQ2FsZW5kYXIuSVNPZAADZGF5YQJkAARob3VyYQNkAAttaWNyb3NlY29uZGgCYgAK0UlhBmQABm1pbnV0ZWEwZAAFbW9udGhhCWQABnNlY29uZGEvZAAKc3RkX29mZnNldGEAZAAJdGltZV96b25lbQAAAAdFdGMvVVRDZAAKdXRjX29mZnNldGEAZAAEeWVhcmIAAAfmZAAJem9uZV9hYmJybQAAAANVVEM=",
          "before": null,
          "total_count": 6
        }
      }
    }
  }
  """
  user_erc1155_assets(input: UserErc721Erc1155AssetsInput!): PaginateUserErc1155Assets

  """
  query {
    user_erc721_assets(
      input: {
        user_address: "0x0000000000ce6d8c1fba76f26d6cc5db71432710"
        limit: 1
      }
    ) {
      entries {
        token_id
        address_hash
        token_contract_address_hash
        value
      }
      metadata {
        total_count
        after
        before
      }
    }
  }
  
  {
    "data": {
      "user_erc721_assets": {
        "entries": [
          {
            "address_hash": "0x0000000000ce6d8c1fba76f26d6cc5db71432710",
            "token_contract_address_hash": "0x784cd3c52813098763c371df8fbe8ed27d2c1ebd",
            "token_id": "641",
            "value": "4"
          }
        ],
        "metadata": {
          "after": "g3QAAAACZAAMYmxvY2tfbnVtYmVyYgAE5cVkABB2YWx1ZV9mZXRjaGVkX2F0dAAAAA1kAApfX3N0cnVjdF9fZAAPRWxpeGlyLkRhdGVUaW1lZAAIY2FsZW5kYXJkABNFbGl4aXIuQ2FsZW5kYXIuSVNPZAADZGF5YR9kAARob3VyYRBkAAttaWNyb3NlY29uZGgCYgAEVUxhBmQABm1pbnV0ZWEUZAAFbW9udGhhCGQABnNlY29uZGEcZAAKc3RkX29mZnNldGEAZAAJdGltZV96b25lbQAAAAdFdGMvVVRDZAAKdXRjX29mZnNldGEAZAAEeWVhcmIAAAfmZAAJem9uZV9hYmJybQAAAANVVEM=",
          "before": null,
          "total_count": 4
        }
      }
    }
  }
  """
  user_erc721_assets(input: UserErc721Erc1155AssetsInput!): PaginateUserErc721Assets
}

type SmartContract {
  abi: [Json]
  account: Account
  account_id: String
  compiler_file_format: String
  compiler_version: String
  constructor_arguments: String
  contract_source_code: String
  deployment_tx_hash: HashFull
  id: Int
  name: String
  other_info: String
}

input SmartContractInput {
  contract_address: HashAddress
  script_hash: HashFull
}

input SmartContractsInput {
  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  sorter: [SmartContractsSorterInput] = [{sort_type: ASC, sort_value: ID}, {sort_type: ASC, sort_value: NAME}]
}

enum SmartContractsSorter {
  EX_TX_COUNT
  ID
  NAME
}

input SmartContractsSorterInput {
  sort_type: SortType
  sort_value: SmartContractsSorter
}

enum SortType {
  ASC
  DESC
}

type SourcifyCheckByAddresses {
  address: HashAddress
  chain_ids: [String]
  status: String
}

input SourcifyCheckByAddressesInput {
  addresses: [HashAddress]!
}

enum Status {
  ON_CHAINED
  PENDING
}

type TokenApproval {
  approved: Boolean
  block: Block
  block_hash: HashFull
  block_number: Int
  data: Decimal
  spender_address_hash: String
  token_contract_address_hash: HashAddress
  token_owner_address_hash: HashAddress
  transaction_hash: HashFull
  type: ApprovalType
  udt: Udt
}

input TokenApprovalInput {
  address: HashAddress

  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  sorter: [TokenApprovalsSorterInput] = [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: ID}]
  token_type: TokenType
}

enum TokenApprovalsSorter {
  BLOCK_NUMBER
  ID
}

input TokenApprovalsSorterInput {
  sort_type: SortType
  sort_value: TokenApprovalsSorter
}

type TokenTransfer {
  amount: Decimal
  amounts: [Decimal]
  block: Block
  block_hash: HashFull
  block_number: Int
  from_account: Account
  from_address: HashAddress
  log_index: Int
  polyjuice: Polyjuice
  to_account: Account
  to_address: HashAddress
  token_contract_address_hash: HashAddress
  token_id: Decimal
  token_ids: [Decimal]
  transaction: Transaction
  transaction_hash: HashFull
  udt: Udt
}

enum TokenTransfersSorter {
  BLOCK_NUMBER
  LOG_INDEX
  TRANSACTION_HASH
}

input TokenTransfersSorterInput {
  sort_type: SortType
  sort_value: TokenTransfersSorter
}

enum TokenType {
  ERC1155
  ERC20
  ERC721
}

type Transaction {
  args: ChainData
  block: Block
  block_hash: HashFull
  block_number: Int
  eth_hash: HashFull
  from_account: Account
  from_account_id: Int
  hash: HashFull
  index: Int
  method_id: ChainData
  method_name: String
  nonce: Int
  polyjuice: Polyjuice
  polyjuice_creator: PolyjuiceCreator
  to_account: Account
  to_account_id: Int
  type: TransactionType
}

input TransactionInput {
  eth_hash: HashFull
  transaction_hash: HashFull
}

input TransactionsInput {
  """Fetch the records after this cursor."""
  after: String
  age_range_end: DateTime
  age_range_start: DateTime

  """Fetch the records before this cursor."""
  before: String

  """
  if combine_from_to is true, then from_address and to_address are combined into
  query condition like `address = from_address OR address = to_address`
  """
  combine_from_to: Boolean = true

  """argument: the end of block number(inclusive) for search query"""
  end_block_number: Int
  from_eth_address: HashAddress
  from_script_hash: HashFull

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  sorter: [TransactionsSorterInput] = [{sort_type: DESC, sort_value: BLOCK_NUMBER}, {sort_type: DESC, sort_value: INDEX}, {sort_type: ASC, sort_value: HASH}]

  """argument: the start of block number(inclusive) for search query"""
  start_block_number: Int
  status: Status
  to_eth_address: HashAddress
  to_script_hash: HashFull
}

enum TransactionsSorter {
  BLOCK_NUMBER
  HASH
  INDEX
}

input TransactionsSorterInput {
  sort_type: SortType
  sort_value: TransactionsSorter
}

enum TransactionType {
  ETH_ADDRESS_REGISTRY
  POLYJUICE
  POLYJUICE_CREATOR
}

type Udt {
  account: Account
  bridge_account_id: Int
  contract_address_hash: HashAddress
  decimal: Int
  description: String
  eth_type: EthType
  holders_count: Int
  icon: String
  id: Int
  minted_count: Int
  name: String
  official_site: String
  price: Decimal
  script_hash: HashFull
  supply: Decimal
  symbol: String
  type: UdtType
  type_script: Json
  value: Decimal
}

input UdtInput {
  bridge_account_id: Int
  contract_address: HashAddress
  id: Int
}

input UdtsInput {
  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String
  contract_address: HashAddress
  fuzzy_name: String

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  sorter: [UdtsSorterInput] = [{sort_type: ASC, sort_value: ID}]
  type: UdtType
}

enum UdtsSorter {
  EX_HOLDERS_COUNT
  ID
  NAME
  SUPPLY
}

input UdtsSorterInput {
  sort_type: SortType
  sort_value: UdtsSorter
}

enum UdtType {
  BRIDGE
  NATIVE
}

input UserErc721Erc1155AssetsInput {
  """Fetch the records after this cursor."""
  after: String

  """Fetch the records before this cursor."""
  before: String

  """
  Limits the number of records returned per page. Note that this number will be capped by maximum_limit=100. Defaults to 20.
  """
  limit: Int = 20
  user_address: HashAddress!
}

input VerifyAndUpdateFromSourcifyInput {
  address: HashAddress!
}

