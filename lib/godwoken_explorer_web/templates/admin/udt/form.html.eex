<%= form_for @changeset, @action, [multipart: true, id: "torch-form"], fn f -> %>
  <fieldset class="torch-panel">
    <legend>
      <span>Details</span>
    </legend>
    <%= if @changeset.action do %>
      <p class="torch-form-error">Oops, something went wrong! Please check the errors below.</p>
    <% end %>

    <div class="torch-form-group">
      <%= label f, :type %>
      <%= select f, :type, ["Bridge": "bridge", "Native": "native"] %>
      <%= error_tag f, :type %>
    </div>

    <%= if @conn.request_path == "/admin/udts/new" do %>
      <div class="torch-form-group">
          <%= label f, :udt_address, "udt_address *" %>
          <%= text_input f, :udt_address, required: true %>
          <%= error_tag f, :udt_address %>
        </div>
    <% end %>

    <div class="torch-form-group">
      <%= label f, :bridge_account_eth_address, "bridge_account_eth_address(polyjuice contract eth address)" %>
      <%= text_input f, :bridge_account_eth_address %>
      <%= error_tag f, :bridge_account_eth_address %>
    </div>

    <div class="torch-form-group">
      <%= label f, :decimal %>
      <%= number_input f, :decimal %>
      <%= error_tag f, :decimal %>
    </div>

    <div class="torch-form-group">
      <%= label f, :name %>
      <%= text_input f, :name %>
      <%= error_tag f, :name %>
    </div>

    <div class="torch-form-group">
      <%= label f, :symbol %>
      <%= text_input f, :symbol %>
      <%= error_tag f, :symbol %>
    </div>

    <div class="torch-form-group">
      <%= label f, :icon %>
      <%= text_input f, :icon %>
      <%= error_tag f, :icon %>
    </div>

    <div class="torch-form-group">
      <%= label f, :supply %>
      <%= number_input f, :supply, step: "any" %>
      <%= error_tag f, :supply %>
    </div>

    <div class="torch-form-group">
      <%= label f, :description %>
      <%= text_input f, :description %>
      <%= error_tag f, :description %>
    </div>

    <div class="torch-form-group">
      <%= label f, :official_site %>
      <%= text_input f, :official_site %>
      <%= error_tag f, :official_site %>
    </div>

    <div class="torch-form-group">
      <%= label f, :script_hash, "Layer1 Script Hash" %>
      <input id="torch-form_udt_script_hash" name="udt[script_hash]" type="text" value="<%= script_hash(@conn) %>" >
      <%= error_tag f, :script_hash %>
    </div>

    <div class="torch-form-group">
      <%= label f, :type_script_code_hash, "Layer1 Type Script Code Hash" %>
      <input id="torch-form_udt_type_script_code_hash" name="udt[type_script][code_hash]" type="text" value="<%= type_script_value(@conn, "code_hash") %>" >
      <%= error_tag f, :type_script_code_hash %>
    </div>

    <div class="torch-form-group">
      <%= label f, :type_script_hash_type, "Layer1 Type Script Hash Type" %>
      <input id="torch-form_udt_type_script_hash_type" name="udt[type_script][hash_type]" type="text" value="<%= type_script_value(@conn, "hash_type") %>" >
      <%= error_tag f, :type_script_hash_type %>
    </div>

    <div class="torch-form-group">
      <%= label f, :type_script_args, "Layer1 Type Script Args" %>
      <input id="torch-form_udt_type_script_args" name="udt[type_script][args]" type="text" value="<%= type_script_value(@conn, "args") %>" >
      <%= error_tag f, :type_script_args %>
    </div>

    <div class="torch-submit-form">
      <%= submit "Submit", class: "torch-submit-button" %>
    </div>
  </fieldset>
<% end %>
<script>
const selectElement = document.querySelector('#torch-form_type');
const bridgeAccountIdElement = document.querySelector('#torch-form_bridge_account_eth_address');
const scriptHashElement = document.querySelector('#torch-form_script_hash');
const codeHashElement = document.querySelector('#torch-form_udt_type_script_code_hash');
const argsElement = document.querySelector('#torch-form_udt_type_script_args');
const hashTypeElement = document.querySelector('#torch-form_udt_type_script_hash_type');
  document.addEventListener('DOMContentLoaded', function() {
  if(selectElement.value == "native") {
    bridgeAccountIdElement.parentNode.style.display = 'none';
    scriptHashElement.parentNode.style.display = 'none';
    codeHashElement.parentNode.style.display = 'none';
    argsElement.parentNode.style.display = 'none';
    hashTypeElement.parentNode.style.display = 'none';

  }
  else {
    bridgeAccountIdElement.parentNode.style.display = 'flex';
    scriptHashElement.parentNode.style.display = 'flex';
    codeHashElement.parentNode.style.display = 'flex';
    argsElement.parentNode.style.display = 'flex';
    hashTypeElement.parentNode.style.display = 'flex';
  }
}, false);

selectElement.addEventListener('change', (event) =>{
  if(selectElement.value == "native") {
    bridgeAccountIdElement.parentNode.style.display = 'none';
    scriptHashElement.parentNode.style.display = 'none';
    codeHashElement.parentNode.style.display = 'none';
    argsElement.parentNode.style.display = 'none';
    hashTypeElement.parentNode.style.display = 'none';

  }
  else {
    bridgeAccountIdElement.parentNode.style.display = 'flex';
    scriptHashElement.parentNode.style.display = 'flex';
    codeHashElement.parentNode.style.display = 'flex';
    argsElement.parentNode.style.display = 'flex';
    hashTypeElement.parentNode.style.display = 'flex';
  }
});


</script>
